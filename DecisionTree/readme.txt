数据并不多，首先运用‘lenses.txt'中的数据训练决策树，
然后用’标签以及测试数据.txt‘中的数据测试并预测

思路整理：
首先建立解析器读入数据，输入文件名和标签，输出一个表。（这次尝试用dataframe和array做）
然后建立一个评价器，输入一个表，输出它的香农熵
然后建立一个分类器，输入一个分类，输出它的香农熵
然后建立一个最优划分器，输入一个表，通过遍历特征求香农熵，输出最优划分特征
然后建立一个画树器，输入一个表，输出用字典表示的树状图
最后通过字典表示的树状图对数据进行预测

写代码时觉察到的决策树算法的缺点和改进点：
1.决策树根本不需要把特征转化为数值型
2.感觉决策树更适用于那种非数值型数据
3.决策树另一个缺点是不直观？计算量大？
4.写代码的过程中感觉没什么难点，唯一的难点是用字典表示树状图
5.这一点很重要，对于训练数据中没有的数据，决策树不能进行预测。
这说明决策树并不能给出没有的东西，所以决策树算法只能用于分类，不能用于预测

学到的python代码：
1.2种方法把一个二维列表的值放入dataframe里面去
2,dict_value里面有一个字典，拿出这个字典需要先把这个dict_value转化成list，然后再从这个list里面拿值
3.列表的删除操作：remove，del，append都是对原列表直接进行操作，并且返回值是null
4.dataframe.drop方法删除一列需要添加参数axis=1
5.line是一个字符串，删除左右空格并且用tab分隔：line.strip().split('\t')
6.字典的get(xxx,0)方法对于字典的赋值很好用

























