利用PCA对半导体制造数据降帷，并画出选取各主成分的方差变化图

思路整理：
首先建立解析器把dat文件导入，输出一个二维矩阵
然后对这个矩阵的缺失值进行处理，主要是把NAN替换成那一列的平均值（中心化）
然后取协方差矩阵，利用协方差矩阵求出特征值和特征向量
然后把特征值排序并筛选，并得出对应的特征向量
最后把数据映射到变换空间里面去，并且给出还原公式

写代码时觉察到的决策树算法的缺点和改进点：
1.线性变换就是对向量右乘一个矩阵。因此对于线性变换的矩阵A,对原空间上的基向量x1,x2,x3...，映射后的空间的基向量为y1,y2,y3...，并且yi=a1i*x1+a2i*x2+a3i*x3...，则Y=AX，即A为线性变换的矩阵。那么对于空间Y上的任一向量z=b1*y1+b2*y2+b3*y3...=(b1,b2,b3...)Y=(b1,b2,b3...)A*X。就是说对于向量z，如果经过变换后的坐标为B，则经过线性变换之前的坐标为BA。一般的，如果X和Y都是单位基向量，那么A是单位正交矩阵。(由于协方差阵是实对称的，所有它的特征向量是两两正交的)
2，PCA有一个假设：使得每个特征具有相同的均值（零）和方差，为什么要有这个，实际操作时却没有除以标准差？


学到的python代码：
1.nonzero(a) 将对矩阵a的所有非零元素， 分别安装两个维度， 一次返回其在各维度上的目录值
2.any(...)当传入空可迭代对象时返回False，当可迭代对象中有任意一个不为False，则返回True
all(...)当传入空可迭代对象时返回True，当可迭代对象中有任意一个不为True，则返回False
all(~isnan(data))判断data中是否存在nan
3.datamean=mean(data[nonzero(~isnan(data[:,i]))[0],i])求非nan的值得平均值
data[nonzero(isnan(data[:,i]))[0],i]=datamean把nan的值用datamean代替
4.arange()类似于内置函数range()，通过指定开始值、终值和步长
linspace()通过指定开始值、终值和元素个数
5.data[[1,3,5,6],:]返回data的1,3,5,6行
6.不知道为什么在求特征向量的时候产生复数了？？？

