利用数据文件中的前90行数据进行训练，利用后10行数据进行测试
准确度为90%，很满意

思路整理：
打算构建模糊SVM模型进行分类。包括：寻找参数的启发式方法，径向基函数
首先建立解析器，读取文件，返回数据矩阵和标签矩阵
然后构造径向基函数方法
然后构造svm机，通过输入训练数据和标签数据，返回得到的a向量
然后构造分类器，通过输入测试数据和a向量，输出此数据的类

SVM的思路整理：
SVM是寻找二分类数据集的线性可分超平面，并且使这个超平面距离它最近的点最大
首先它通过类似逻辑斯特回归的分类函数构造一个分类器，通过这个分类器把问题转化为求最大值问题，参数是
各特征的线性回归系数
然后它利用对偶问题，引入参数a，把问题转化为求关于a的最值问题。好处是转化后的函数可以带入数据通过求
内积来估计参数
然后由于我们只运算内积，所以当改变这个内积函数时，我们同样能得到结果。有代表性的内积函数是径向基函数，
径向基函数通过把数据投影到n维空间，使之线性可分
然后我们在此基础上引入松弛变量对模型进行优化，使之忽略部分离群值
最后返回一组a的值

SVM时想到的问题：
1.在构建SVM的时候出了很多错误，总结如下：误把matdata写成matlabel，a1a2b1b2更新的时候的符号错误，lamb编程错误导致可能会为0，LH的编程错误导致更新时越界，计算LH的时候把更新后的a1带入计算，在更新a1的嵌套里面加上a2的嵌套（实际上只需要更新一个a2）。这些都有可能导致error发散，从而使a1a2更新为无穷大
2.径向基函数中的k的取值不恰当会导致产生的支持向量过多
3,迭代次数过少会使精度下降
4.c越大，表示越不能容忍离群值，支持向量会减少
5.启发式方法的思路：首先更新一遍parameter，在进行第2-n次更新时，选择系数处于0，c之内的a1进行更新（启发式方法1），然后选择(error2-error1)距离最大的a2进行更新
6.觉得SVM的优化方向在a值得选取（减少计算量）和松弛变量（离群点）上。
7.还有关于SVM中，径向基函数的选取啊，离群点的观察啊，误差精度的选取啊，判断是否属于离群点啊这些东西以后有时间再研究。

学到的python代码：
1.matdata.shape返回矩阵的行数和列数
2.列表等转化为mat会非常利于计算
3,合理利用矩阵的转置相乘
4，重复的代码块，可替换的代码块，小的循环代码块最好转化为函数

























